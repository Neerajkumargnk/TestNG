<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-31T09:09:01 IST" name="Surefire suite" finished-at="2023-03-31T09:09:02 IST" duration-ms="101">
    <groups>
    </groups>
    <test started-at="2023-03-31T09:09:01 IST" name="Surefire test" finished-at="2023-03-31T09:09:02 IST" duration-ms="101">
      <class name="org.example.Test1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:01 IST" name="beforeSuite" finished-at="2023-03-31T09:09:01 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:01 IST" name="beforeTest" finished-at="2023-03-31T09:09:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="beforeClass" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="beforeMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fun1()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="fun1" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fun1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="afterMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="beforeMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fun2()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="fun2" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fun2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="afterMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fun3()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="fun3" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fun3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="beforeMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="afterClass" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="afterMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="afterTest" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:org.example.Test1@2ddc8ecb]" started-at="2023-03-31T09:09:02 IST" name="afterSuite" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.example.Test1 -->
      <class name="org.example.Test2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="beforeClass" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="beforeMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="fun4()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="fun4" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fun4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="afterMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fun5()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="fun5" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fun5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="beforeMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="afterMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="fun6()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="fun6" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fun6 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="beforeMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="afterMethod" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:org.example.Test2@229d10bd]" started-at="2023-03-31T09:09:02 IST" name="afterClass" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.example.Test2 -->
      <class name="org.example.AppTest">
        <test-method signature="closeUMS()[pri:0, instance:org.example.AppTest@27c86f2d]" started-at="2023-03-31T09:09:02 IST" name="closeUMS" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeUMS -->
        <test-method signature="openHomePage()[pri:0, instance:org.example.AppTest@27c86f2d]" started-at="2023-03-31T09:09:02 IST" name="openHomePage" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openHomePage -->
        <test-method signature="openUMS()[pri:0, instance:org.example.AppTest@27c86f2d]" started-at="2023-03-31T09:09:02 IST" name="openUMS" finished-at="2023-03-31T09:09:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUMS -->
        <test-method signature="clickUMS()[pri:1, instance:org.example.AppTest@27c86f2d]" started-at="2023-03-31T09:09:02 IST" name="clickUMS" finished-at="2023-03-31T09:09:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickUMS -->
        <test-method signature="openBrowser()[pri:2, instance:org.example.AppTest@27c86f2d]" started-at="2023-03-31T09:09:02 IST" name="openBrowser" finished-at="2023-03-31T09:09:02 IST" duration-ms="15" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [2] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [2] but found [1]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:1418)
at org.testng.Assert.assertEquals(Assert.java:1382)
at org.testng.Assert.assertEquals(Assert.java:1428)
at org.example.AppTest.openBrowser(AppTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
      </class> <!-- org.example.AppTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
